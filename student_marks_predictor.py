# -*- coding: utf-8 -*-
"""Student Marks Predictor

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LalFqwRmG2W9jvcKTX-NBZHKbyyceD_l
"""

import pandas as pd
import numpy as np

data = pd.read_csv('hours_scores.csv')

data.info()

data.describe()

data

data['Hours'].unique()

data['Scores'].unique()

data['Hours'].max()

data['Scores'].max()

data.shape

#data = data.values.reshape(-1, 1)

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score



model = LinearRegression()

x = data['Hours']
y = data['Scores']

xtrain, xtest, ytrain, ytest = train_test_split(x,y, test_size=0.2)

xtrain

# Reshape xtrain to be a 2D array before fitting the model
xtrain_reshaped = xtrain.values.reshape(-1, 1)
model.fit(xtrain_reshaped, ytrain)

print(xtrain_reshaped)
print('-----')
print(ytrain)

xtest_new = xtest.values.reshape(-1,1)
y_pred = model.predict(xtest_new)
print(y_pred)

error = mean_squared_error(ytest,y_pred)
error

error2 = r2_score(ytest, y_pred)
error2

err = []

for i in range(1000):
  xtrain, xtest, ytrain, ytest = train_test_split(x,y, test_size=0.2, random_state=i)
  xtrain_n = xtrain.values.reshape(-1,1)
  xtest_n = xtest.values.reshape(-1,1)
  model = LinearRegression()
  model.fit(xtrain_n, ytrain)
  y_pred = model.predict(xtest_n)
  err.append(mean_squared_error(ytest, y_pred))

np.argmin(err)

err[np.argmin(err)]

err1 = []

for i in range(10):
  xtrain, xtest, ytrain, ytest = train_test_split(x,y, test_size=0.2, random_state=i)
  xtrain_n = xtrain.values.reshape(-1,1)
  xtest_n = xtest.values.reshape(-1,1)
  model = LinearRegression()
  model.fit(xtrain_n, ytrain)
  y_pred = model.predict(xtest_n)
  err1.append(r2_score(ytest, y_pred))

np.argmax(err1)

err1[np.argmax(err1)]

xtrain, xtest, ytrain, ytest = train_test_split(x,y, test_size=0.2, random_state=np.argmax(err1))
xtrain_re = xtrain.values.reshape(-1,1)
xtest_re = xtest.values.reshape(-1,1)
lr = LinearRegression()
lr.fit(xtrain_re, ytrain)
y_pred = lr.predict(xtest_re)
r2_score(ytest, y_pred)

lr.predict(pd.DataFrame([[5.35]]))

lr.predict(pd.DataFrame([[9.25]]))

lr.predict([[10]])

import pickle
mod = pickle.dump(lr, open('mod.py','wb'))

